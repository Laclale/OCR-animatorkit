@通常
--track@s:サイズ,1,1000,100,1
--track@w:奥行き,1,500,20,1
--track@t:開閉,0,90,0
--track@aspect:縦横比,-100,100,0
--dialog:背表紙色/col,col1=0x77ba40;外枠色/col,col2=0xc4bc00;中身色/col,col3=0xffffff;
h=math.min(8,s/2)
asx=math.max(aspect,0)
asy=math.max(-aspect,0)

local OCRRikky_save
local save_x
local save_y
local save_z
local save_rx
local save_ry
local save_rz
	if OCRRikky == 1 then
	  OCRRikky_save = OCRRikky
  save_x=obj.ox+OCRRikkyx
  save_y=obj.oy+OCRRikkyy
  save_z=obj.oz+OCRRikkyz
  save_rx=obj.rx+OCRRikkyrx
  save_ry=obj.ry+OCRRikkyry
  save_rz=obj.rz+OCRRikkyrz
	end
obj.effect()
if OCRRikky_save then
	if OCRRikky == 1 then
	  OCRRikky = 0
	end
debug_print("通常 OCRRikky exists")
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
require("OCRUtil")
x0=s/2*(1-asx/100)
y0=s/2*(1-asy/100)
--anglepoint(x,z,angle,dist)
z0=w/2
x0a,z0a=anglepoint(0,0,t,-z0)
x1a,x0a=x0a,x0a-x0
x0b,z0b=anglepoint(x0a,z0a,t-90,-x0*2)
--ここまでanglepointの準備
obj.drawpoly(x0b,-y0,-z0b,x0a,-y0,-z0a,x0a,y0,-z0a,x0b,y0,-z0b)
obj.drawpoly(x0a,-y0, z0a,x0b,-y0, z0b,x0b,y0, z0b,x0a,y0, z0a)

  ts=s-2*h
  x0=s/2*(1-asx/100)
  x1=ts/2*(1-asx/100)
  y0=-ts/2*(1-asy/100)
  y1=-s/2*(1-asy/100)
  w0=w-2*h
  x0c,z0c=anglepoint(0,0,t,-w0/2)
  x0c,x1c=x0c-x0,x0c-x1
  x1a=x1a-x1
  z1a,z1c=z0a,z0c
  if t<90 then
    obj.load("figure","四角形",col1,s/2)
    --1
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
    obj.effect()
    obj.drawpoly(-x0,-y0,  0,x0c,-y0,-z0c,x0c,y0,-z0c,-x0,y0,0)
    obj.drawpoly(x0c,-y0,z0c,-x0,-y0,   0,-x0,y0,   0,x0c,y0,z0c)
  end
  obj.load("figure","四角形",col2,s/2)
  --2は外枠
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
  obj.effect()
  if t<90 then
    obj.drawpoly(x0a,-y0,-z0a,-x0,-y0,   0,-x0,-y1,   0,x0a,-y1,-z0a)
    obj.drawpoly(-x0,-y0,   0,x0a,-y0, z0a,x0a,-y1, z0a,-x0,-y1,0)
    obj.drawpoly(x0a, y1,-z0a,-x0, y1,   0,-x0, y0,   0,x0a, y0,-z0a)
    obj.drawpoly(-x0, y1,   0,x0a, y1, z0a,x0a, y0, z0a,-x0, y0,0)
    obj.drawpoly(x0c,-y0,-z0c,x0a,-y0,-z0a,x0a, y0,-z0a,x0c, y0,-z0c)
    obj.drawpoly(x0a,-y0, z0a,x0c,-y0, z0c,x0c, y0, z0c,x0a, y0, z0a)
  end
  obj.drawpoly(x0a,-y1,-z0a,-x0,-y1,   0,-x1,-y0,   0,x1c,-y0,-z0c)
  obj.drawpoly(-x0,-y1,   0,x0a,-y1, z0a,x1c,-y0, z0c,-x1,-y0,0)
  obj.drawpoly(-x0, y1,   0,x0a, y1,-z0a,x1c, y0,-z0c,-x1, y0,0)
  obj.drawpoly(x0a, y1, z0a,-x0, y1,   0,-x1, y0,   0,x1c, y0, z0c)
  
  x0o,z0o=x0a,z0a
  x0p,z0p=x0b,z0b
  x0q,z0q=x0c,z0c
  wb=w-2*h
  x0a,z0a=anglepoint(0,0,t,-wb/2)
  x0c,z0c=anglepoint(0,0,t-90,-x1*2)
  x0a,x0c=x0a-x1,x0c-x1
  x0b,z0b=anglepoint(x0a,z0a,t-90,-x1*2)
  obj.drawpoly(x0b,-y0, z0b,x0p,-y1, z0p,x0p, y1, z0p,x0b, y0, z0b)
  obj.drawpoly(x1c, y0, z1c,x0b, y0, z0b,x0p, y1, z0p,x0o, y1, z0o)
  obj.drawpoly(x0b,-y0, z0b,x1c,-y0, z1c,x0o,-y1, z0o,x0p,-y1, z0p)
  obj.drawpoly(x0b, y0,-z0b,x0p, y1,-z0p,x0p,-y1,-z0p,x0b,-y0,-z0b)
  obj.drawpoly(x0b, y0,-z0b,x1c, y0,-z1c,x0o, y1,-z0o,x0p, y1,-z0p)
  obj.drawpoly(x1c,-y0,-z1c,x0b,-y0,-z0b,x0p,-y1,-z0p,x0o,-y1,-z0o)

  obj.load("figure","四角形",col3,s/2)
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
  obj.effect()
  obj.drawpoly(x0c,-y0,z0c,x0b,-y0,z0b,x0b, y0,z0b,x0c, y0,z0c)
  obj.drawpoly(x0a,-y0,z0a,x0b,-y0,z0b,x0c,-y0,z0c,-x1,-y0,0)
  obj.drawpoly(x0b, y0,z0b,x0a, y0,z0a,-x1, y0,  0,x0c, y0,z0c)
  obj.drawpoly(x0b,-y0,-z0b,x0c,-y0,-z0c,x0c, y0,-z0c,x0b, y0,-z0b)
  obj.drawpoly(x0b,-y0,-z0b,x0a,-y0,-z0a,-x1,-y0,   0,x0c,-y0,-z0c)
  obj.drawpoly(x0a, y0,-z0a,x0b, y0,-z0b,x0c, y0,-z0c,-x1, y0,0)
  if t>0 then
    obj.drawpoly(x0c,y0,z0c,-x1,y0,   0,-x1,-y0,   0,x0c,-y0,z0c)
    obj.drawpoly(-x1,y0,  0,x0c,y0,-z0c,x0c,-y0,-z0c,-x1,-y0,0)
  end
if OCRRikky_save then
OCRRikky=OCRRikky_save
x0q,z0q=anglepoint(0,0,t,x0)
x0q,z0q=anglepoint(x0q,z0q,-t,x0)
  obj.ox=obj.ox+x0q
  obj.oz=obj.oz+z0q
  obj.effect()
end

@右固定
--track@s:サイズ,1,1000,100,1
--track@w:奥行き,1,500,20,1
--track@t:開閉,0,180,0
--track@aspect:縦横比,-100,100,0
--dialog:背表紙色/col,col1=0x77ba40;外枠色/col,col2=0xc4bc00;中身色/col,col3=0xffffff;
h=math.min(8,s/2)
asx=math.max(aspect,0)
asy=math.max(-aspect,0)

local OCRRikky_save
local save_x
local save_y
local save_z
local save_rx
local save_ry
local save_rz
	if OCRRikky == 1 then
	  OCRRikky_save = OCRRikky
  save_x=obj.ox+OCRRikkyx
  save_y=obj.oy+OCRRikkyy
  save_z=obj.oz+OCRRikkyz
  save_rx=obj.rx+OCRRikkyrx
  save_ry=obj.ry+OCRRikkyry
  save_rz=obj.rz+OCRRikkyrz
	end
obj.effect()
if OCRRikky_save then
	if OCRRikky == 1 then
	  OCRRikky = 0
	end
debug_print("右固定 OCRRikky exists")
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
require("OCRUtil")
x0=s/2*(1-asx/100)
y0=s/2*(1-asy/100)
--anglepoint(x,z,angle,dist)
z0=w/2
x0a,z0a=anglepoint(0,0,t,-z0)
x1a,x0a=x0a,x0a-x0
x0b,z0b=anglepoint(x0a,z0a,t-90,-x0*2)
--ここまでanglepointの準備
obj.drawpoly(x0,-y0,z0,-x0,-y0,z0,-x0,y0,z0,x0,y0,z0)
obj.drawpoly(x0a,-y0, z0a,x0b,-y0, z0b,x0b,y0, z0b,x0a,y0, z0a)

  z2=-z0
  ts=s-2*h
  x0=s/2*(1-asx/100)
  x1=ts/2*(1-asx/100)
  y0=-ts/2*(1-asy/100)
  y1=-s/2*(1-asy/100)
  w0=w-2*h
  z0=-w0/2
  x0c,z0c=anglepoint(0,0,t,z0)
  x0c,x1c=x0c-x0,x0c-x1
  x1a=x1a-x1
  z1a,z1c=z0a,z0c
  if t<180 then
    obj.load("figure","四角形",col1,s/2)
    --1
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
    obj.effect()
    obj.drawpoly(-x0,-y0,  0,-x0,-y0,-z0,-x0,y0,-z0,-x0,y0,0)
    obj.drawpoly(x0c,-y0,z0c,-x0,-y0,  0,-x0,y0,  0,x0c,y0,z0c)
  end
  obj.load("figure","四角形",col2,s/2)
  --2は外枠
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
  obj.effect()
  if t<180 then
    obj.drawpoly(-x0,-y0,-z2,-x0,-y0,  0,-x0,-y1,  0,-x0,-y1,-z2)
    obj.drawpoly(-x0,-y0,  0,x0a,-y0,z0a,x0a,-y1,z0a,-x0,-y1,0)
    obj.drawpoly(-x0, y1,-z2,-x0, y1,  0,-x0, y0,  0,-x0, y0,-z2)
    obj.drawpoly(-x0, y1,  0,x0a, y1,z0a,x0a, y0,z0a,-x0, y0,0)
    obj.drawpoly(-x0,-y0,-z2,-x0,-y0,-z0,-x0, y0,-z0,-x0, y0,-z2)
    obj.drawpoly(x0a,-y0,z0a,x0c,-y0,z0c,x0c, y0,z0c,x0a, y0,z0a)
  end
  obj.drawpoly(-x0,-y1,-z2,-x0,-y1,  0,-x1,-y0,  0,-x1,-y0,-z0)
  obj.drawpoly(-x0,-y1,  0,x0a,-y1,z0a,x1c,-y0,z0c,-x1,-y0,0)
  obj.drawpoly(-x0, y1,  0,-x0, y1,-z2,-x1, y0,-z0,-x1, y0,0)
  obj.drawpoly(x0a, y1,z0a,-x0, y1,  0,-x1, y0,  0,x1c, y0,z0c)
  
  z1=z0
  x0o,z0o=x0a,z0a
  x0p,z0p=x0b,z0b
  x0q,z0q=x0c,z0c
  wb=w-2*h
  z0=-wb/2
  x0a,z0a=anglepoint(0,0,t,z0)
  x0c,z0c=anglepoint(0,0,t-90,-x1*2)
  x0a,x0c=x0a-x1,x0c-x1
  x0b,z0b=anglepoint(x0a,z0a,t-90,-x1*2)
  obj.drawpoly(x0b,-y0,z0b,x0p,-y1,z0p,x0p, y1,z0p,x0b, y0,z0b)
  obj.drawpoly(x1c, y0,z1c,x0b, y0,z0b,x0p, y1,z0p,x0o, y1,z0o)
  obj.drawpoly(x0b,-y0,z0b,x1c,-y0,z1c,x0o,-y1,z0o,x0p,-y1,z0p)
  obj.drawpoly( x1, y0,-z1, x0, y1,-z2, x0,-y1,-z2, x1,-y0,-z1)
  obj.drawpoly( x1, y0,-z1,-x1, y0,-z0,-x0, y1,-z2, x0, y1,-z2)
  obj.drawpoly(-x1,-y0,-z0, x1,-y0,-z1, x0,-y1,-z2,-x0,-y1,-z2)

  obj.load("figure","四角形",col3,s/2)
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
  obj.effect()
  obj.drawpoly(x0c,-y0,z0c,x0b,-y0,z0b,x0b, y0,z0b,x0c, y0,z0c)
  obj.drawpoly(x0a,-y0,z0a,x0b,-y0,z0b,x0c,-y0,z0c,-x1,-y0,0)
  obj.drawpoly(x0b, y0,z0b,x0a, y0,z0a,-x1, y0,  0,x0c, y0,z0c)
  obj.drawpoly( x1,-y0,-z0, x1,-y0,  0, x1, y0,  0, x1, y0,-z0)
  obj.drawpoly(-x1,-y0,  0, x1,-y0,  0, x1,-y0,-z0,-x1,-y0,-z0)
  obj.drawpoly( x1, y0,-z0,-x1, y0,-z0,-x1, y0,  0, x1, y0,  0)
  if t>0 then
    obj.drawpoly(x0c,y0,z0c,-x1,y0,0,-x1,-y0,0,x0c,-y0,z0c)
    obj.drawpoly(-x1,y0,  0, x1,y0,0, x1,-y0,0,-x1,-y0,0)
  end
if OCRRikky_save then
OCRRikky=OCRRikky_save
x0q,z0q=anglepoint(-x0,0,-t,x0)
  obj.ox=obj.ox+x0q
  obj.oz=obj.oz+z0q
  obj.effect()
end

@左固定
--track@s:サイズ,1,1000,100,1
--track@w:奥行き,1,500,20,1
--track@t:開閉,0,180,0
--track@aspect:縦横比,-100,100,0
--dialog:背表紙色/col,col1=0x77ba40;外枠色/col,col2=0xc4bc00;中身色/col,col3=0xffffff;
h=math.min(8,s/2)
asx=math.max(aspect,0)
asy=math.max(-aspect,0)

local OCRRikky_save
local save_x
local save_y
local save_z
local save_rx
local save_ry
local save_rz
	if OCRRikky == 1 then
	  OCRRikky_save = OCRRikky
  save_x=obj.ox+OCRRikkyx
  save_y=obj.oy+OCRRikkyy
  save_z=obj.oz+OCRRikkyz
  save_rx=obj.rx+OCRRikkyrx
  save_ry=obj.ry+OCRRikkyry
  save_rz=obj.rz+OCRRikkyrz
	end
obj.effect()
if OCRRikky_save then
	if OCRRikky == 1 then
	  OCRRikky = 0
	end
debug_print("左固定 OCRRikky exists")
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
require("OCRUtil")
x0=s/2*(1-asx/100)
y0=s/2*(1-asy/100)
--anglepoint(x,z,angle,dist)
z0=w/2
x0a,z0a=anglepoint(0,0,t,-z0)
x1a,x0a=x0a,x0a-x0
x0b,z0b=anglepoint(x0a,z0a,t-90,-x0*2)
--ここまでanglepointの準備
obj.drawpoly(-x0,-y0, -z0, x0,-y0, -z0, x0,y0, -z0,-x0,y0,-z0)
obj.drawpoly(x0b,-y0,-z0b,x0a,-y0,-z0a,x0a,y0,-z0a,x0b,y0,-z0b)

  z2=-z0
  ts=s-2*h
  x0=s/2*(1-asx/100)
  x1=ts/2*(1-asx/100)
  y0=-ts/2*(1-asy/100)
  y1=-s/2*(1-asy/100)
  w0=w-2*h
  z0=-w0/2
  x0c,z0c=anglepoint(0,0,t,z0)
  x0c,x1c=x0c-x0,x0c-x1
  x1a=x1a-x1
  z1a,z1c=z0a,z0c
  if t<180 then
    obj.load("figure","四角形",col1,s/2)
    --1
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
    obj.effect()
    obj.drawpoly(-x0,-y0,z0,-x0,-y0,   0,-x0,y0,   0,-x0,y0,z0)
    obj.drawpoly(-x0,-y0, 0,x0c,-y0,-z0c,x0c,y0,-z0c,-x0,y0,0)
  end
  obj.load("figure","四角形",col2,s/2)
  --2は外枠
  obj.effect()
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
  if t<180 then
    obj.drawpoly(-x0,-y0,   0,-x0,-y0,  z2,-x0,-y1,  z2,-x0,-y1,0)
    obj.drawpoly(x0a,-y0,-z0a,-x0,-y0,   0,-x0,-y1,   0,x0a,-y1,-z0a)
    obj.drawpoly(-x0, y1,   0,-x0, y1,  z2,-x0, y0,  z2,-x0, y0,0)
    obj.drawpoly(x0a, y1,-z0a,-x0, y1,   0,-x0, y0,   0,x0a, y0,-z0a)
    obj.drawpoly(-x0,-y0,  z2,-x0,-y0,  z0,-x0, y0,  z0,-x0, y0,z2)
    obj.drawpoly(x0c,-y0,-z0c,x0a,-y0,-z0a,x0a, y0,-z0a,x0c, y0,-z0c)
  end
  obj.drawpoly(-x0,-y1,   0,-x0,-y1,  z2,-x1,-y0,  z0,-x1,-y0,0)
  obj.drawpoly(x0a,-y1,-z0a,-x0,-y1,   0,-x1,-y0,   0,x1c,-y0,-z0c)
  obj.drawpoly(-x0, y1,  z2,-x0, y1,   0,-x1, y0,   0,-x1, y0,z0)
  obj.drawpoly(-x0, y1,   0,x0a, y1,-z0a,x1c, y0,-z0c,-x1, y0,0)
  
  z1=z0
  x0o,z0o=x0a,z0a
  x0p,z0p=x0b,z0b
  x0q,z0q=x0c,z0c
  wb=w-2*h
  z0=-wb/2
  x0a,z0a=anglepoint(0,0,t,z0)
  x0c,z0c=anglepoint(0,0,t-90,-x1*2)
  x0a,x0c=x0a-x1,x0c-x1
  x0b,z0b=anglepoint(x0a,z0a,t-90,-x1*2)
  obj.drawpoly(x0p,-y1,-z0p,x0b,-y0,-z0b,x0b, y0,-z0b,x0p, y1,-z0p)
  obj.drawpoly(x0b, y0,-z0b,x1c, y0,-z1c,x0o, y1,-z0o,x0p, y1,-z0p)
  obj.drawpoly(x1c,-y0,-z1c,x0b,-y0,-z0b,x0p,-y1,-z0p,x0o,-y1,-z0o)
  obj.drawpoly( x0, y1,  z2, x1, y0,  z1, x1,-y0,  z1, x0,-y1,z2)
  obj.drawpoly(-x1, y0,  z0, x1, y0,  z1, x0, y1,  z2,-x0, y1,z2)
  obj.drawpoly( x1,-y0,  z1,-x1,-y0,  z0,-x0,-y1,  z2, x0,-y1,z2)

  obj.load("figure","四角形",col3,s/2)
if OCRRikky_save then
  obj.ox=save_x
  obj.oy=save_y
  obj.oz=save_z
  obj.rx=save_rx
  obj.ry=save_ry
  obj.rz=save_rz
end
  obj.effect()
  obj.drawpoly(x0b,-y0,-z0b,x0c,-y0,-z0c,x0c, y0,-z0c,x0b, y0,-z0b)
  obj.drawpoly(x0b,-y0,-z0b,x0a,-y0,-z0a,-x1,-y0,   0,x0c,-y0,-z0c)
  obj.drawpoly(x0a, y0,-z0a,x0b, y0,-z0b,x0c, y0,-z0c,-x1, y0,0)
  obj.drawpoly( x1,-y0,   0, x1,-y0,  z0, x1, y0,  z0, x1, y0,0)
  obj.drawpoly( x1,-y0,   0,-x1,-y0,   0,-x1,-y0,  z0, x1,-y0,z0)
  obj.drawpoly( x1, y0,  z0,-x1, y0,  z0,-x1, y0,   0, x1, y0,0)
  if t>0 then
    obj.drawpoly(-x1,y0,0,x0c,y0,-z0c,x0c,-y0,-z0c,-x1,-y0,0)
    obj.drawpoly( x1,y0,0,-x1,y0,   0,-x1,-y0,   0, x1,-y0,0)
  end
if OCRRikky_save then
OCRRikky=OCRRikky_save
x0q,z0q=anglepoint(x0,0,-t,x0)
  obj.ox=obj.ox+x0q
  obj.oz=obj.oz+z0q
  obj.effect()
end
